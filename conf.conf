# This is the configuration file for the lemmy API test script written by mister_monster

# the server URL where the API is located, can be localhost
# there is a bug where this does not work, the value must be changed in test.py til this is fixed
server = ws://127.0.0.1:8536/api/v1/ws


# only set "create_admin" to "True" if you intend to test this against a server that doesnt have an admin already
# all it does is test if the first user added is an admin, per lemmy expected behavior

create_admin = False

# if "create_admin" is "True", these will be used to create the admin.
# if it is "False" these will be used when testing "Add admin" API functions as the admin user
# Remember, the test adds an integer to the end of the username, so "Admin" will be "Admin0"
# This is because the tests may involve creation of new Admin usernames.

admin_username = Admin
admin_password = Weh@veyouremails

# Username range will start at 0. So, if your username here is "username", the usernames will be "username0, username1,..."
# and so on, since this test may involve creation of many users.
# the password will be the same for all usernames

username = test_user
password = Weh@veyouremails

# community, post names. Testing may require creation of multiple communities and posts.
# like usernames, they will be iterated and appended with increasing integers i.e. community0, community1, etc
community_name = test_community
post_title = test_post

# "general" tests are tests that do not require auth to run. User tests require a valid user, admin tests require
# an admin and mod tests require a mod
# some tests overlap, for example, to test mod functionality the user must create a community.

# Options for running different sets of tests

# these test the bare functionality, only required fields and only if they return a valid result

run_general_expected_behavior_tests = True
run_user_expected_behavior_tests = True
run_mod_expected_behavior_tests = False
run_admin_expected_behavior_tests = False

# These test optional fields for every API function with different optional fields and check the result

run_general_optional_field_tests = False
run_user_optional_field_tests = False
run_mod_optional_field_tests = False
run_admin_optional_field_tests = False

# These test potential abuse cases against the server

run_general_bad_behavior_tests = False
run_user_bad_behavior_tests = False
run_mod_bad_behavior_tests = False
run_admin_bad_behavior_tests = False
